name: ðŸ“‹ TaskMaster Task Issue
description: Create an issue based on TaskMaster task for tracking implementation progress
title: "[Task {task-id}] {Short description}"
labels: ["task", "needs-triage"]
projects: []
assignees: []
body:
  - type: markdown
    attributes:
      value: |
        ## ðŸŽ¯ TaskMaster Task Issue
        
        Use this template to create an issue based on a TaskMaster task for better tracking and collaboration.
        
  - type: input
    id: task-id
    attributes:
      label: TaskMaster Task ID
      description: The ID from TaskMaster (e.g., 4.2 for subtask or 5 for main task)
      placeholder: "4.2"
    validations:
      required: true
      
  - type: textarea
    id: task-details
    attributes:
      label: Task Details
      description: Copy the task description and details from TaskMaster
      placeholder: |
        Title: Implement user authentication system
        Description: Set up JWT-based authentication with proper security measures
        Status: pending
        Priority: high
        
        Details: 
        - Use bcrypt for password hashing
        - Implement JWT token generation and validation
        - Add middleware for protected routes
        - Create login/logout endpoints
    validations:
      required: true
      
  - type: dropdown
    id: task-priority
    attributes:
      label: Task Priority
      description: Priority level of this task
      options:
        - high
        - medium
        - low
    validations:
      required: true
      
  - type: dropdown
    id: task-type
    attributes:
      label: Task Type
      description: What type of work does this task involve?
      options:
        - feature
        - bugfix
        - refactor
        - documentation
        - testing
        - infrastructure
        - security
        - performance
    validations:
      required: true
      
  - type: checkboxes
    id: components
    attributes:
      label: Components Affected
      description: Which parts of the system will this task affect?
      options:
        - label: Frontend (Next.js)
        - label: Backend (Spring Boot)
        - label: Database (PostgreSQL)
        - label: Infrastructure (AWS/Docker)
        - label: CI/CD (GitHub Actions)
        - label: Documentation
        - label: Testing
        
  - type: textarea
    id: acceptance-criteria
    attributes:
      label: Acceptance Criteria
      description: Define what needs to be accomplished for this task to be considered complete
      placeholder: |
        - [ ] JWT authentication system implemented
        - [ ] Login endpoint returns valid JWT tokens
        - [ ] Protected routes verify JWT tokens
        - [ ] Unit tests written with 80%+ coverage
        - [ ] API documentation updated
        - [ ] Security audit completed
    validations:
      required: false
      
  - type: textarea
    id: dependencies
    attributes:
      label: Dependencies
      description: List any TaskMaster task IDs or external dependencies
      placeholder: |
        TaskMaster Dependencies:
        - Task 3.1 (Database setup must be complete)
        - Task 3.2 (User entity must be implemented)
        
        External Dependencies:
        - None
    validations:
      required: false
      
  - type: textarea
    id: implementation-notes
    attributes:
      label: Implementation Notes
      description: Any technical notes, considerations, or approaches for implementation
      placeholder: |
        Technical Considerations:
        - Use Spring Security for authentication framework
        - JWT tokens should expire after 24 hours
        - Implement refresh token mechanism
        - Add rate limiting for login attempts
        
        Resources:
        - [Spring Security JWT Guide](https://example.com)
        - [JWT Best Practices](https://example.com)
    validations:
      required: false
      
  - type: textarea
    id: test-strategy
    attributes:
      label: Test Strategy
      description: How will this task be tested?
      placeholder: |
        Unit Tests:
        - Test JWT token generation and validation
        - Test authentication middleware
        - Test login/logout endpoints
        
        Integration Tests:
        - Test end-to-end authentication flow
        - Test protected route access
        
        Manual Testing:
        - Test login via Postman/frontend
        - Test token expiration handling
        - Test invalid credentials handling
    validations:
      required: false
      
  - type: checkboxes
    id: checklist
    attributes:
      label: Implementation Checklist
      description: Track progress on this task
      options:
        - label: TaskMaster task status set to 'in-progress'
        - label: Feature branch created from develop
        - label: Implementation completed
        - label: Unit tests written and passing
        - label: Integration tests written and passing
        - label: Code review completed
        - label: Documentation updated
        - label: TaskMaster task status set to 'done'
        - label: Pull request merged
        
  - type: markdown
    attributes:
      value: |
        ---
        
        ## ðŸ¤– TaskMaster Integration
        
        This issue is automatically linked to TaskMaster Task **{task-id}**. 
        
        **TaskMaster Commands:**
        ```bash
        # View task details
        task-master show {task-id}
        
        # Update task status
        task-master set-status --id={task-id} --status=in-progress
        
        # Add implementation notes
        task-master update-subtask --id={task-id} --prompt="Implementation progress notes"
        
        # Mark as complete
        task-master set-status --id={task-id} --status=done
        ```
        
        **GitHub Integration:**
        - Branch naming: `feature/task-{task-id}-{description}`
        - Commit format: `feat: implement feature (task {task-id})`
        - PR title: `[Task {task-id}] feat: {description}`