name: TaskMaster Status Sync

on:
  pull_request:
    types: [closed]
  push:
    branches: [main, develop]

jobs:
  sync-task-status:
    name: Update TaskMaster Status
    runs-on: ubuntu-latest
    # Only run when PR is merged or push to main/develop branches
    if: |
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true) ||
      (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'))
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Need full history for commits
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Extract Task ID from title or commit
        id: extract-task
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            TITLE="${{ github.event.pull_request.title }}"
            echo "Source: PR title - $TITLE"
          else
            TITLE="${{ github.event.head_commit.message }}"
            echo "Source: Commit message - $TITLE"
          fi
          
          # Extract task ID using various patterns
          # Pattern 1: [Task 4.2] or [task 4.2]
          TASK_ID=$(echo "$TITLE" | grep -oiP '\[task\s+\K[\d.]+(?=\])' | head -1)
          
          # Pattern 2: (task 4.2) or (Task 4.2) 
          if [[ -z "$TASK_ID" ]]; then
            TASK_ID=$(echo "$TITLE" | grep -oiP '\(task\s+\K[\d.]+(?=\))' | head -1)
          fi
          
          # Pattern 3: task 4.2 (without brackets)
          if [[ -z "$TASK_ID" ]]; then
            TASK_ID=$(echo "$TITLE" | grep -oiP '(?:^|\s)task\s+\K[\d.]+(?=\s|$)' | head -1)
          fi
          
          if [[ -n "$TASK_ID" ]]; then
            echo "Found Task ID: $TASK_ID"
            echo "task-id=$TASK_ID" >> $GITHUB_OUTPUT
            echo "has-task=true" >> $GITHUB_OUTPUT
          else
            echo "No Task ID found in: $TITLE"
            echo "has-task=false" >> $GITHUB_OUTPUT
          fi

      - name: Verify TaskMaster setup
        if: steps.extract-task.outputs.has-task == 'true'
        run: |
          if [[ ! -f ".taskmaster/tasks/tasks.json" ]]; then
            echo "❌ TaskMaster not initialized in this repository"
            exit 1
          fi
          
          echo "✅ TaskMaster setup verified"
          echo "Tasks file exists at: .taskmaster/tasks/tasks.json"

      - name: Install TaskMaster CLI
        if: steps.extract-task.outputs.has-task == 'true'
        run: |
          npm install -g task-master-ai
          task-master --version

      - name: Update TaskMaster task status
        if: steps.extract-task.outputs.has-task == 'true'
        run: |
          TASK_ID="${{ steps.extract-task.outputs.task-id }}"
          echo "Updating task $TASK_ID status to 'done'"
          
          # Try to update task status
          if task-master set-status --id="$TASK_ID" --status=done; then
            echo "✅ Successfully updated task $TASK_ID to 'done'"
          else
            echo "❌ Failed to update task $TASK_ID"
            echo "Checking if task exists..."
            if task-master show "$TASK_ID"; then
              echo "Task exists but update failed"
            else
              echo "Task $TASK_ID does not exist in TaskMaster"
            fi
            exit 1
          fi
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Regenerate task files
        if: steps.extract-task.outputs.has-task == 'true'
        run: |
          echo "Regenerating TaskMaster task files..."
          task-master generate
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}

      - name: Commit updated TaskMaster files
        if: steps.extract-task.outputs.has-task == 'true'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Check if there are changes to commit
          if git diff --quiet .taskmaster/; then
            echo "No changes to TaskMaster files"
          else
            echo "Committing TaskMaster updates..."
            git add .taskmaster/
            git commit -m "chore: auto-update task ${{ steps.extract-task.outputs.task-id }} status to done

- Updated via GitHub Actions after PR merge/push
- Task ID: ${{ steps.extract-task.outputs.task-id }}
- Triggered by: ${{ github.event_name }}

🤖 Generated by TaskMaster GitHub Actions integration"
            
            # Push to the same branch
            git push
            echo "✅ TaskMaster files updated and committed"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Post summary
        if: steps.extract-task.outputs.has-task == 'true'
        run: |
          echo "## 🎯 TaskMaster Status Update" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Task ${{ steps.extract-task.outputs.task-id }}** status updated to **done**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "- **PR**: ${{ github.event.pull_request.title }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Commit**: ${{ github.event.head_commit.message }}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "- **Updated**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY

      - name: Notify if no task found
        if: steps.extract-task.outputs.has-task == 'false'
        run: |
          echo "## ℹ️ No TaskMaster Task Detected" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "No task ID found in the title or commit message." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "To enable automatic task status updates, include task references like:" >> $GITHUB_STEP_SUMMARY
          echo "- \`[Task 4.2] Fix user authentication\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`feat: implement login (task 5.1)\`" >> $GITHUB_STEP_SUMMARY