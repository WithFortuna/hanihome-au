# Integration Test Configuration for HaniHome AU API
spring:
  application:
    name: hanihome-au-api-integration-test
  
  # Testcontainers PostgreSQL Database Configuration
  datasource:
    # These values will be overridden by Testcontainers
    url: jdbc:postgresql://localhost:5432/test
    username: test
    password: test
    driver-class-name: org.postgresql.Driver
    
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false  # Less verbose for integration tests
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        
  # Enable Flyway for integration tests to test migrations
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    
  # Test Redis Configuration (Testcontainers)
  data:
    redis:
      host: localhost
      port: 6379
      database: 0
      timeout: 3000ms

# JWT Configuration for integration tests
jwt:
  secret: integration-test-jwt-secret-key-for-testing-only-do-not-use-in-production
  expiration: 3600000  # 1 hour
  refresh-expiration: 7200000  # 2 hours

# Test File Storage
app:
  file-storage:
    upload-dir: integration-test-uploads
    base-url: http://localhost:8080/files
    max-file-size: 10MB
    allowed-extensions: jpg,jpeg,png,gif,webp,pdf

# Rate Limiting for integration tests
rate-limit:
  requests-per-minute: 500
  burst-size: 50

# Integration Test Logging - Less verbose
logging:
  level:
    com.hanihome: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.springframework.web: WARN
    org.springframework.transaction: INFO
    org.testcontainers: INFO
    com.github.dockerjava: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints for integration tests
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

# OAuth2 Test Configuration (Mock)
security:
  oauth2:
    client:
      registration:
        google:
          client-id: test-google-client-id
          client-secret: test-google-client-secret
          redirect-uri: http://localhost:8080/oauth2/callback/google
        apple:
          client-id: test-apple-client-id
          client-secret: test-apple-client-secret
          redirect-uri: http://localhost:8080/oauth2/callback/apple

# Email Configuration for integration tests (Mock)
spring.mail:
  host: localhost
  port: 1025  # MailHog test port
  username: test
  password: test
  properties:
    mail:
      smtp:
        auth: false
        starttls:
          enable: false

# FCM Configuration for integration tests (Mock)
fcm:
  credentials-path: test-firebase-credentials.json
  enabled: false  # Disabled for integration tests